---

name: Цикл For
theory: |
  Цикл `while` идеален для ситуаций, когда количество итераций неизвестно заранее — например, при поиске простого числа. Когда количество итераций известно, предпочтительнее использовать цикл `for`. Именно его мы изучим в этом уроке.

  Посмотрим реализацию переворота строки через цикл `for`:

  ```php
  <?php

  function reverseString($str)
  {
      $result = '';

      for ($i = 0; $i < strlen($str); $i += 1) {
          $currentChar = $str[$i];
          $result = "{$currentChar}{$result}";
      }

      return $result;
  }
  ```

  https://replit.com/@hexlet/php-basics-for-reversestring

  Этот код можно прочитать так:

  > Цикл с индексом `$i` повторяется, пока соблюдается условие `$i < strlen($str)`, и после каждого шага `$i` увеличивается на 1

  Посмотрим, что находится в круглых скобках:

  1. Начальное значение счетчика — этот код выполняется ровно один раз перед первой итерацией
  2. Предикат (условие повторения циклов) — выполняется на каждой итерации, как и в `while`
  3. Описание изменения счетчика — этот код выполняется в конце каждой итерации

  В остальном принцип работы точно такой же, как у цикла `while`.

instructions: |

  Реализуйте функцию `sumOfSeries()`, которая считает сумму [ряда целых чисел](https://ru.wikipedia.org/wiki/Числовой_ряд). Ряд задаётся двумя числами — начальным и конечным.

  Функция принимает два аргумента-числа и возвращает сумму ряда. Например, для аргументов `4` и `7` сумма будет `4 + 5 + 6 + 7 = 22`.

  ```php
  <?php

  sumOfSeries(1, 2); // 3
  sumOfSeries(1, 3); // 6
  sumOfSeries(4, 7); // 22
  ```

  Если начальное и конечное числа равны, то результатом будет то же число:

  ```php
  <?php

  sumOfSeries(1, 1); // 1
  ```

tips: []
